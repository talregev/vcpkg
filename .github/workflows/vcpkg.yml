name: vcpkg
on:
  pull_request:

# Every time you make a push to your PR, it cancel immediately the previous checks,
# and start a new one. The other runner will be available more quickly to your PR.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    if: microsoft/vcpkg != ${{ github.repository }}
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:      
          # - os: windows-latest
          #   triplet: x64-windows-release
          #   binary_cache: C:\Users\runneradmin\AppData\Local\vcpkg\archives
          #   home: "D:/a/vcpkg"
          # - os: ubuntu-latest
          #   triplet: x64-linux-release
          #   binary_cache: /home/runner/.cache/vcpkg/archives
          #   home: /home/runner/work/vcpkg/vcpkg
          - os: macos-latest
            triplet: arm64-osx
            binary_cache: /Users/runner/.cache/vcpkg/archives
            home: /Users/runner/work/vcpkg/vcpkg
    steps:
      - name: echo repo
        shell: bash
        run: |
          echo ${{ github.repository }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore cache dependencies
        uses: actions/cache/restore@v3
        with:
          path: ${{ matrix.binary_cache }}
          key: ${{ matrix.os }}
          restore-keys: ${{ matrix.os }}

      - name: Setup msbuild
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          toolset: 14.40

      - name: cl version
        if: runner.os == 'Windows'
        shell: cmd
        run: cl

      - name: Install Linux vcpkg dependencies
        if: runner.os == 'Linux'
        shell: bash
        run: >
          sudo apt-get install 
          autoconf
          automake
          autoconf-archive
          libltdl-dev
          libxmu-dev
          libxi-dev
          libgl-dev
          libxtst-dev
          '^libxcb.*-dev' 
          libx11-xcb-dev
          libgl1-mesa-dev
          libxrender-dev
          libxkbcommon-dev
          libxkbcommon-x11-dev
          gperf

          # libglu1-mesa-dev
          # mesa-common-dev
          # libxrandr-dev
          # libxxf86vm-dev

      - name: Install macOS vcpkg dependencies
        if: runner.os == 'macOS'
        shell: bash
        run: >
          brew install 
          autoconf
          automake
          autoconf-archive
          libtool
          gcc
          gperf
          gnu-sed

      - name: "Install dependencies"
        run: >
          vcpkg x-set-installed --triplet ${{ matrix.triplet }} --host-triplet ${{ matrix.triplet }} --x-install-root=installed
          qt5-tools

      - name: copy files for hash
        shell: bash
        run: |
          mkdir -p vcpkg-info
          find installed -type f -name 'vcpkg_abi_info.txt' | \
          while read filepath; do
            triplet=$(echo "$filepath" | awk -F/ '{print $(NF-3)}')
            port=$(echo "$filepath" | awk -F/ '{print $(NF-1)}')
            cp "$filepath" "vcpkg-info/${triplet}_${port}.txt"
          done

      - name: Save cache dependencies
        uses: actions/cache/save@v4
        with:
          path: ${{ matrix.binary_cache }}
          key: ${{ matrix.os }}-${{ hashFiles('vcpkg-info/*') }}

      - name: "Install octave"
        run: >
          vcpkg x-set-installed --triplet ${{ matrix.triplet }} --host-triplet ${{ matrix.triplet }} --x-install-root=installed
          octave[gui]

      - name: "log octave"
        if: always()
        run: |
         cat ${{ matrix.home }}/buildtrees/octave/config-${{ matrix.triplet }}-rel-out.log
